// Code generated by protoc-gen-go. DO NOT EDIT.
// source: def.proto

package def

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CountType int32

const (
	CountType_CountBoth    CountType = 0
	CountType_CountFromEnd CountType = 1
	CountType_CountToEnd   CountType = 2
	CountType_CountNone    CountType = 3
)

var CountType_name = map[int32]string{
	0: "CountBoth",
	1: "CountFromEnd",
	2: "CountToEnd",
	3: "CountNone",
}

var CountType_value = map[string]int32{
	"CountBoth":    0,
	"CountFromEnd": 1,
	"CountToEnd":   2,
	"CountNone":    3,
}

func (x CountType) String() string {
	return proto.EnumName(CountType_name, int32(x))
}

func (CountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{0}
}

type State int32

const (
	State_StateDeleted State = 0
	State_StatePrivate State = 1
	State_State1       State = 2
	State_State2       State = 3
	State_State3       State = 4
	State_StateFriend  State = 5
	State_StatePublic  State = 6
)

var State_name = map[int32]string{
	0: "StateDeleted",
	1: "StatePrivate",
	2: "State1",
	3: "State2",
	4: "State3",
	5: "StateFriend",
	6: "StatePublic",
}

var State_value = map[string]int32{
	"StateDeleted": 0,
	"StatePrivate": 1,
	"State1":       2,
	"State2":       3,
	"State3":       4,
	"StateFriend":  5,
	"StatePublic":  6,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{1}
}

type Op int32

const (
	Op_Eq Op = 0
	Op_Gt Op = 1
	Op_Ge Op = 2
	Op_Lt Op = 3
	Op_Le Op = 4
	Op_Ne Op = 5
	Op_In Op = 6
)

var Op_name = map[int32]string{
	0: "Eq",
	1: "Gt",
	2: "Ge",
	3: "Lt",
	4: "Le",
	5: "Ne",
	6: "In",
}

var Op_value = map[string]int32{
	"Eq": 0,
	"Gt": 1,
	"Ge": 2,
	"Lt": 3,
	"Le": 4,
	"Ne": 5,
	"In": 6,
}

func (x Op) String() string {
	return proto.EnumName(Op_name, int32(x))
}

func (Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{2}
}

type UpdateAction int32

const (
	UpdateAction_Set    UpdateAction = 0
	UpdateAction_Incr   UpdateAction = 1
	UpdateAction_Add    UpdateAction = 2
	UpdateAction_Remove UpdateAction = 3
)

var UpdateAction_name = map[int32]string{
	0: "Set",
	1: "Incr",
	2: "Add",
	3: "Remove",
}

var UpdateAction_value = map[string]int32{
	"Set":    0,
	"Incr":   1,
	"Add":    2,
	"Remove": 3,
}

func (x UpdateAction) String() string {
	return proto.EnumName(UpdateAction_name, int32(x))
}

func (UpdateAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{3}
}

type ValueType int32

const (
	ValueType_String ValueType = 0
	ValueType_Int64  ValueType = 1
	ValueType_Int    ValueType = 2
	ValueType_Double ValueType = 3
	ValueType_Bool   ValueType = 4
	ValueType_Bytes  ValueType = 5
)

var ValueType_name = map[int32]string{
	0: "String",
	1: "Int64",
	2: "Int",
	3: "Double",
	4: "Bool",
	5: "Bytes",
}

var ValueType_value = map[string]int32{
	"String": 0,
	"Int64":  1,
	"Int":    2,
	"Double": 3,
	"Bool":   4,
	"Bytes":  5,
}

func (x ValueType) String() string {
	return proto.EnumName(ValueType_name, int32(x))
}

func (ValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{4}
}

type SortDir int32

const (
	SortDir_Asc  SortDir = 0
	SortDir_Desc SortDir = 1
)

var SortDir_name = map[int32]string{
	0: "Asc",
	1: "Desc",
}

var SortDir_value = map[string]int32{
	"Asc":  0,
	"Desc": 1,
}

func (x SortDir) String() string {
	return proto.EnumName(SortDir_name, int32(x))
}

func (SortDir) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{5}
}

type RType struct {
	From                 string    `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string    `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Verb                 string    `protobuf:"bytes,3,opt,name=verb,proto3" json:"verb,omitempty"`
	Multiple             bool      `protobuf:"varint,4,opt,name=multiple,proto3" json:"multiple,omitempty"`
	CountType            CountType `protobuf:"varint,5,opt,name=countType,proto3,enum=def.CountType" json:"countType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RType) Reset()         { *m = RType{} }
func (m *RType) String() string { return proto.CompactTextString(m) }
func (*RType) ProtoMessage()    {}
func (*RType) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{0}
}

func (m *RType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RType.Unmarshal(m, b)
}
func (m *RType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RType.Marshal(b, m, deterministic)
}
func (m *RType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RType.Merge(m, src)
}
func (m *RType) XXX_Size() int {
	return xxx_messageInfo_RType.Size(m)
}
func (m *RType) XXX_DiscardUnknown() {
	xxx_messageInfo_RType.DiscardUnknown(m)
}

var xxx_messageInfo_RType proto.InternalMessageInfo

func (m *RType) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RType) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *RType) GetVerb() string {
	if m != nil {
		return m.Verb
	}
	return ""
}

func (m *RType) GetMultiple() bool {
	if m != nil {
		return m.Multiple
	}
	return false
}

func (m *RType) GetCountType() CountType {
	if m != nil {
		return m.CountType
	}
	return CountType_CountBoth
}

type EType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EType) Reset()         { *m = EType{} }
func (m *EType) String() string { return proto.CompactTextString(m) }
func (*EType) ProtoMessage()    {}
func (*EType) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{1}
}

func (m *EType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EType.Unmarshal(m, b)
}
func (m *EType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EType.Marshal(b, m, deterministic)
}
func (m *EType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EType.Merge(m, src)
}
func (m *EType) XXX_Size() int {
	return xxx_messageInfo_EType.Size(m)
}
func (m *EType) XXX_DiscardUnknown() {
	xxx_messageInfo_EType.DiscardUnknown(m)
}

var xxx_messageInfo_EType proto.InternalMessageInfo

func (m *EType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type E struct {
	Type                 string            `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	ID                   string            `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	ID1                  string            `protobuf:"bytes,3,opt,name=ID1,proto3" json:"ID1,omitempty"`
	ID2                  string            `protobuf:"bytes,4,opt,name=ID2,proto3" json:"ID2,omitempty"`
	ID3                  string            `protobuf:"bytes,5,opt,name=ID3,proto3" json:"ID3,omitempty"`
	CTime                int64             `protobuf:"varint,6,opt,name=CTime,proto3" json:"CTime,omitempty"`
	UTime                int64             `protobuf:"varint,7,opt,name=UTime,proto3" json:"UTime,omitempty"`
	State                State             `protobuf:"varint,8,opt,name=State,proto3,enum=def.State" json:"State,omitempty"`
	Tags                 []string          `protobuf:"bytes,9,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,10,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Content              map[string]string `protobuf:"bytes,11,rep,name=Content,proto3" json:"Content,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Score                int64             `protobuf:"varint,12,opt,name=Score,proto3" json:"Score,omitempty"`
	Score1               int64             `protobuf:"varint,13,opt,name=Score1,proto3" json:"Score1,omitempty"`
	Resources            []string          `protobuf:"bytes,14,rep,name=Resources,proto3" json:"Resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *E) Reset()         { *m = E{} }
func (m *E) String() string { return proto.CompactTextString(m) }
func (*E) ProtoMessage()    {}
func (*E) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{2}
}

func (m *E) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_E.Unmarshal(m, b)
}
func (m *E) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_E.Marshal(b, m, deterministic)
}
func (m *E) XXX_Merge(src proto.Message) {
	xxx_messageInfo_E.Merge(m, src)
}
func (m *E) XXX_Size() int {
	return xxx_messageInfo_E.Size(m)
}
func (m *E) XXX_DiscardUnknown() {
	xxx_messageInfo_E.DiscardUnknown(m)
}

var xxx_messageInfo_E proto.InternalMessageInfo

func (m *E) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *E) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *E) GetID1() string {
	if m != nil {
		return m.ID1
	}
	return ""
}

func (m *E) GetID2() string {
	if m != nil {
		return m.ID2
	}
	return ""
}

func (m *E) GetID3() string {
	if m != nil {
		return m.ID3
	}
	return ""
}

func (m *E) GetCTime() int64 {
	if m != nil {
		return m.CTime
	}
	return 0
}

func (m *E) GetUTime() int64 {
	if m != nil {
		return m.UTime
	}
	return 0
}

func (m *E) GetState() State {
	if m != nil {
		return m.State
	}
	return State_StateDeleted
}

func (m *E) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *E) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *E) GetContent() map[string]string {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *E) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *E) GetScore1() int64 {
	if m != nil {
		return m.Score1
	}
	return 0
}

func (m *E) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

type DefineETypeReq struct {
	EType                *EType   `protobuf:"bytes,1,opt,name=eType,proto3" json:"eType,omitempty"`
	CreationRTypes       []*RType `protobuf:"bytes,2,rep,name=creationRTypes,proto3" json:"creationRTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefineETypeReq) Reset()         { *m = DefineETypeReq{} }
func (m *DefineETypeReq) String() string { return proto.CompactTextString(m) }
func (*DefineETypeReq) ProtoMessage()    {}
func (*DefineETypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{3}
}

func (m *DefineETypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefineETypeReq.Unmarshal(m, b)
}
func (m *DefineETypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefineETypeReq.Marshal(b, m, deterministic)
}
func (m *DefineETypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefineETypeReq.Merge(m, src)
}
func (m *DefineETypeReq) XXX_Size() int {
	return xxx_messageInfo_DefineETypeReq.Size(m)
}
func (m *DefineETypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DefineETypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_DefineETypeReq proto.InternalMessageInfo

func (m *DefineETypeReq) GetEType() *EType {
	if m != nil {
		return m.EType
	}
	return nil
}

func (m *DefineETypeReq) GetCreationRTypes() []*RType {
	if m != nil {
		return m.CreationRTypes
	}
	return nil
}

type CreateEWithRsReq struct {
	E                    *E       `protobuf:"bytes,1,opt,name=e,proto3" json:"e,omitempty"`
	Related              []*E     `protobuf:"bytes,2,rep,name=related,proto3" json:"related,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEWithRsReq) Reset()         { *m = CreateEWithRsReq{} }
func (m *CreateEWithRsReq) String() string { return proto.CompactTextString(m) }
func (*CreateEWithRsReq) ProtoMessage()    {}
func (*CreateEWithRsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{4}
}

func (m *CreateEWithRsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEWithRsReq.Unmarshal(m, b)
}
func (m *CreateEWithRsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEWithRsReq.Marshal(b, m, deterministic)
}
func (m *CreateEWithRsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEWithRsReq.Merge(m, src)
}
func (m *CreateEWithRsReq) XXX_Size() int {
	return xxx_messageInfo_CreateEWithRsReq.Size(m)
}
func (m *CreateEWithRsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEWithRsReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEWithRsReq proto.InternalMessageInfo

func (m *CreateEWithRsReq) GetE() *E {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *CreateEWithRsReq) GetRelated() []*E {
	if m != nil {
		return m.Related
	}
	return nil
}

type RelationReq struct {
	From                 *E       `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   *E       `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Verb                 string   `protobuf:"bytes,3,opt,name=verb,proto3" json:"verb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationReq) Reset()         { *m = RelationReq{} }
func (m *RelationReq) String() string { return proto.CompactTextString(m) }
func (*RelationReq) ProtoMessage()    {}
func (*RelationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{5}
}

func (m *RelationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationReq.Unmarshal(m, b)
}
func (m *RelationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationReq.Marshal(b, m, deterministic)
}
func (m *RelationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationReq.Merge(m, src)
}
func (m *RelationReq) XXX_Size() int {
	return xxx_messageInfo_RelationReq.Size(m)
}
func (m *RelationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationReq.DiscardUnknown(m)
}

var xxx_messageInfo_RelationReq proto.InternalMessageInfo

func (m *RelationReq) GetFrom() *E {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *RelationReq) GetTo() *E {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *RelationReq) GetVerb() string {
	if m != nil {
		return m.Verb
	}
	return ""
}

type GetByIDsReq struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDsReq) Reset()         { *m = GetByIDsReq{} }
func (m *GetByIDsReq) String() string { return proto.CompactTextString(m) }
func (*GetByIDsReq) ProtoMessage()    {}
func (*GetByIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{6}
}

func (m *GetByIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDsReq.Unmarshal(m, b)
}
func (m *GetByIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDsReq.Marshal(b, m, deterministic)
}
func (m *GetByIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDsReq.Merge(m, src)
}
func (m *GetByIDsReq) XXX_Size() int {
	return xxx_messageInfo_GetByIDsReq.Size(m)
}
func (m *GetByIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDsReq proto.InternalMessageInfo

func (m *GetByIDsReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetByIDsReq) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type EList struct {
	List                 []*E     `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EList) Reset()         { *m = EList{} }
func (m *EList) String() string { return proto.CompactTextString(m) }
func (*EList) ProtoMessage()    {}
func (*EList) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{7}
}

func (m *EList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EList.Unmarshal(m, b)
}
func (m *EList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EList.Marshal(b, m, deterministic)
}
func (m *EList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EList.Merge(m, src)
}
func (m *EList) XXX_Size() int {
	return xxx_messageInfo_EList.Size(m)
}
func (m *EList) XXX_DiscardUnknown() {
	xxx_messageInfo_EList.DiscardUnknown(m)
}

var xxx_messageInfo_EList proto.InternalMessageInfo

func (m *EList) GetList() []*E {
	if m != nil {
		return m.List
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{8}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type HasRelationResp struct {
	Has                  bool     `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasRelationResp) Reset()         { *m = HasRelationResp{} }
func (m *HasRelationResp) String() string { return proto.CompactTextString(m) }
func (*HasRelationResp) ProtoMessage()    {}
func (*HasRelationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{9}
}

func (m *HasRelationResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasRelationResp.Unmarshal(m, b)
}
func (m *HasRelationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasRelationResp.Marshal(b, m, deterministic)
}
func (m *HasRelationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasRelationResp.Merge(m, src)
}
func (m *HasRelationResp) XXX_Size() int {
	return xxx_messageInfo_HasRelationResp.Size(m)
}
func (m *HasRelationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HasRelationResp.DiscardUnknown(m)
}

var xxx_messageInfo_HasRelationResp proto.InternalMessageInfo

func (m *HasRelationResp) GetHas() bool {
	if m != nil {
		return m.Has
	}
	return false
}

type Query struct {
	Field                string    `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	Op                   Op        `protobuf:"varint,2,opt,name=Op,proto3,enum=def.Op" json:"Op,omitempty"`
	Value                string    `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
	ValueType            ValueType `protobuf:"varint,4,opt,name=ValueType,proto3,enum=def.ValueType" json:"ValueType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{10}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Query) GetOp() Op {
	if m != nil {
		return m.Op
	}
	return Op_Eq
}

func (m *Query) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Query) GetValueType() ValueType {
	if m != nil {
		return m.ValueType
	}
	return ValueType_String
}

type Limit struct {
	From                 string   `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Limit) Reset()         { *m = Limit{} }
func (m *Limit) String() string { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()    {}
func (*Limit) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{11}
}

func (m *Limit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Limit.Unmarshal(m, b)
}
func (m *Limit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Limit.Marshal(b, m, deterministic)
}
func (m *Limit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Limit.Merge(m, src)
}
func (m *Limit) XXX_Size() int {
	return xxx_messageInfo_Limit.Size(m)
}
func (m *Limit) XXX_DiscardUnknown() {
	xxx_messageInfo_Limit.DiscardUnknown(m)
}

var xxx_messageInfo_Limit proto.InternalMessageInfo

func (m *Limit) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Limit) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Update struct {
	Field                string       `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	Action               UpdateAction `protobuf:"varint,2,opt,name=Action,proto3,enum=def.UpdateAction" json:"Action,omitempty"`
	Value                string       `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
	ValueType            ValueType    `protobuf:"varint,4,opt,name=ValueType,proto3,enum=def.ValueType" json:"ValueType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Update) Reset()         { *m = Update{} }
func (m *Update) String() string { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()    {}
func (*Update) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{12}
}

func (m *Update) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Update.Unmarshal(m, b)
}
func (m *Update) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Update.Marshal(b, m, deterministic)
}
func (m *Update) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Update.Merge(m, src)
}
func (m *Update) XXX_Size() int {
	return xxx_messageInfo_Update.Size(m)
}
func (m *Update) XXX_DiscardUnknown() {
	xxx_messageInfo_Update.DiscardUnknown(m)
}

var xxx_messageInfo_Update proto.InternalMessageInfo

func (m *Update) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Update) GetAction() UpdateAction {
	if m != nil {
		return m.Action
	}
	return UpdateAction_Set
}

func (m *Update) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Update) GetValueType() ValueType {
	if m != nil {
		return m.ValueType
	}
	return ValueType_String
}

type Paged struct {
	List                 []*E     `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	HasMore              bool     `protobuf:"varint,2,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	NextFrom             string   `protobuf:"bytes,3,opt,name=NextFrom,proto3" json:"NextFrom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Paged) Reset()         { *m = Paged{} }
func (m *Paged) String() string { return proto.CompactTextString(m) }
func (*Paged) ProtoMessage()    {}
func (*Paged) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{13}
}

func (m *Paged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Paged.Unmarshal(m, b)
}
func (m *Paged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Paged.Marshal(b, m, deterministic)
}
func (m *Paged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Paged.Merge(m, src)
}
func (m *Paged) XXX_Size() int {
	return xxx_messageInfo_Paged.Size(m)
}
func (m *Paged) XXX_DiscardUnknown() {
	xxx_messageInfo_Paged.DiscardUnknown(m)
}

var xxx_messageInfo_Paged proto.InternalMessageInfo

func (m *Paged) GetList() []*E {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *Paged) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *Paged) GetNextFrom() string {
	if m != nil {
		return m.NextFrom
	}
	return ""
}

type PagedIDs struct {
	List                 []string `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	HasMore              bool     `protobuf:"varint,2,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	NextFrom             string   `protobuf:"bytes,3,opt,name=NextFrom,proto3" json:"NextFrom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagedIDs) Reset()         { *m = PagedIDs{} }
func (m *PagedIDs) String() string { return proto.CompactTextString(m) }
func (*PagedIDs) ProtoMessage()    {}
func (*PagedIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{14}
}

func (m *PagedIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagedIDs.Unmarshal(m, b)
}
func (m *PagedIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagedIDs.Marshal(b, m, deterministic)
}
func (m *PagedIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagedIDs.Merge(m, src)
}
func (m *PagedIDs) XXX_Size() int {
	return xxx_messageInfo_PagedIDs.Size(m)
}
func (m *PagedIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_PagedIDs.DiscardUnknown(m)
}

var xxx_messageInfo_PagedIDs proto.InternalMessageInfo

func (m *PagedIDs) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *PagedIDs) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *PagedIDs) GetNextFrom() string {
	if m != nil {
		return m.NextFrom
	}
	return ""
}

type CountByState struct {
	Counts               map[string]int64 `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CountByState) Reset()         { *m = CountByState{} }
func (m *CountByState) String() string { return proto.CompactTextString(m) }
func (*CountByState) ProtoMessage()    {}
func (*CountByState) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{15}
}

func (m *CountByState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountByState.Unmarshal(m, b)
}
func (m *CountByState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountByState.Marshal(b, m, deterministic)
}
func (m *CountByState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountByState.Merge(m, src)
}
func (m *CountByState) XXX_Size() int {
	return xxx_messageInfo_CountByState.Size(m)
}
func (m *CountByState) XXX_DiscardUnknown() {
	xxx_messageInfo_CountByState.DiscardUnknown(m)
}

var xxx_messageInfo_CountByState proto.InternalMessageInfo

func (m *CountByState) GetCounts() map[string]int64 {
	if m != nil {
		return m.Counts
	}
	return nil
}

type Counts struct {
	Counts               map[string]*CountByState `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Counts) Reset()         { *m = Counts{} }
func (m *Counts) String() string { return proto.CompactTextString(m) }
func (*Counts) ProtoMessage()    {}
func (*Counts) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{16}
}

func (m *Counts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Counts.Unmarshal(m, b)
}
func (m *Counts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Counts.Marshal(b, m, deterministic)
}
func (m *Counts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Counts.Merge(m, src)
}
func (m *Counts) XXX_Size() int {
	return xxx_messageInfo_Counts.Size(m)
}
func (m *Counts) XXX_DiscardUnknown() {
	xxx_messageInfo_Counts.DiscardUnknown(m)
}

var xxx_messageInfo_Counts proto.InternalMessageInfo

func (m *Counts) GetCounts() map[string]*CountByState {
	if m != nil {
		return m.Counts
	}
	return nil
}

type HasRelationsReq struct {
	From                 *E       `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   *E       `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Relations            []string `protobuf:"bytes,3,rep,name=relations,proto3" json:"relations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasRelationsReq) Reset()         { *m = HasRelationsReq{} }
func (m *HasRelationsReq) String() string { return proto.CompactTextString(m) }
func (*HasRelationsReq) ProtoMessage()    {}
func (*HasRelationsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{17}
}

func (m *HasRelationsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasRelationsReq.Unmarshal(m, b)
}
func (m *HasRelationsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasRelationsReq.Marshal(b, m, deterministic)
}
func (m *HasRelationsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasRelationsReq.Merge(m, src)
}
func (m *HasRelationsReq) XXX_Size() int {
	return xxx_messageInfo_HasRelationsReq.Size(m)
}
func (m *HasRelationsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HasRelationsReq.DiscardUnknown(m)
}

var xxx_messageInfo_HasRelationsReq proto.InternalMessageInfo

func (m *HasRelationsReq) GetFrom() *E {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *HasRelationsReq) GetTo() *E {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *HasRelationsReq) GetRelations() []string {
	if m != nil {
		return m.Relations
	}
	return nil
}

type HasRelations struct {
	Relations            map[string]bool `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HasRelations) Reset()         { *m = HasRelations{} }
func (m *HasRelations) String() string { return proto.CompactTextString(m) }
func (*HasRelations) ProtoMessage()    {}
func (*HasRelations) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{18}
}

func (m *HasRelations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasRelations.Unmarshal(m, b)
}
func (m *HasRelations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasRelations.Marshal(b, m, deterministic)
}
func (m *HasRelations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasRelations.Merge(m, src)
}
func (m *HasRelations) XXX_Size() int {
	return xxx_messageInfo_HasRelations.Size(m)
}
func (m *HasRelations) XXX_DiscardUnknown() {
	xxx_messageInfo_HasRelations.DiscardUnknown(m)
}

var xxx_messageInfo_HasRelations proto.InternalMessageInfo

func (m *HasRelations) GetRelations() map[string]bool {
	if m != nil {
		return m.Relations
	}
	return nil
}

type GetRelationReq struct {
	From                 *E       `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Relation             string   `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Limit                *Limit   `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRelationReq) Reset()         { *m = GetRelationReq{} }
func (m *GetRelationReq) String() string { return proto.CompactTextString(m) }
func (*GetRelationReq) ProtoMessage()    {}
func (*GetRelationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{19}
}

func (m *GetRelationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelationReq.Unmarshal(m, b)
}
func (m *GetRelationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelationReq.Marshal(b, m, deterministic)
}
func (m *GetRelationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelationReq.Merge(m, src)
}
func (m *GetRelationReq) XXX_Size() int {
	return xxx_messageInfo_GetRelationReq.Size(m)
}
func (m *GetRelationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelationReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelationReq proto.InternalMessageInfo

func (m *GetRelationReq) GetFrom() *E {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GetRelationReq) GetRelation() string {
	if m != nil {
		return m.Relation
	}
	return ""
}

func (m *GetRelationReq) GetLimit() *Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

type EX struct {
	Entity               *E                  `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Related              []*EX               `protobuf:"bytes,2,rep,name=related,proto3" json:"related,omitempty"`
	Resources            []*E                `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	Counts               *Counts             `protobuf:"bytes,4,opt,name=counts,proto3" json:"counts,omitempty"`
	HasRelations         *HasRelations       `protobuf:"bytes,5,opt,name=hasRelations,proto3" json:"hasRelations,omitempty"`
	Children             map[string]*EXPaged `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EX) Reset()         { *m = EX{} }
func (m *EX) String() string { return proto.CompactTextString(m) }
func (*EX) ProtoMessage()    {}
func (*EX) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{20}
}

func (m *EX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EX.Unmarshal(m, b)
}
func (m *EX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EX.Marshal(b, m, deterministic)
}
func (m *EX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EX.Merge(m, src)
}
func (m *EX) XXX_Size() int {
	return xxx_messageInfo_EX.Size(m)
}
func (m *EX) XXX_DiscardUnknown() {
	xxx_messageInfo_EX.DiscardUnknown(m)
}

var xxx_messageInfo_EX proto.InternalMessageInfo

func (m *EX) GetEntity() *E {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *EX) GetRelated() []*EX {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *EX) GetResources() []*E {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *EX) GetCounts() *Counts {
	if m != nil {
		return m.Counts
	}
	return nil
}

func (m *EX) GetHasRelations() *HasRelations {
	if m != nil {
		return m.HasRelations
	}
	return nil
}

func (m *EX) GetChildren() map[string]*EXPaged {
	if m != nil {
		return m.Children
	}
	return nil
}

type EXPaged struct {
	List                 []*EX    `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	HasMore              bool     `protobuf:"varint,2,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	NextFrom             string   `protobuf:"bytes,3,opt,name=NextFrom,proto3" json:"NextFrom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EXPaged) Reset()         { *m = EXPaged{} }
func (m *EXPaged) String() string { return proto.CompactTextString(m) }
func (*EXPaged) ProtoMessage()    {}
func (*EXPaged) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{21}
}

func (m *EXPaged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EXPaged.Unmarshal(m, b)
}
func (m *EXPaged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EXPaged.Marshal(b, m, deterministic)
}
func (m *EXPaged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EXPaged.Merge(m, src)
}
func (m *EXPaged) XXX_Size() int {
	return xxx_messageInfo_EXPaged.Size(m)
}
func (m *EXPaged) XXX_DiscardUnknown() {
	xxx_messageInfo_EXPaged.DiscardUnknown(m)
}

var xxx_messageInfo_EXPaged proto.InternalMessageInfo

func (m *EXPaged) GetList() []*EX {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *EXPaged) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *EXPaged) GetNextFrom() string {
	if m != nil {
		return m.NextFrom
	}
	return ""
}

type EXList struct {
	List                 []*EX    `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EXList) Reset()         { *m = EXList{} }
func (m *EXList) String() string { return proto.CompactTextString(m) }
func (*EXList) ProtoMessage()    {}
func (*EXList) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{22}
}

func (m *EXList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EXList.Unmarshal(m, b)
}
func (m *EXList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EXList.Marshal(b, m, deterministic)
}
func (m *EXList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EXList.Merge(m, src)
}
func (m *EXList) XXX_Size() int {
	return xxx_messageInfo_EXList.Size(m)
}
func (m *EXList) XXX_DiscardUnknown() {
	xxx_messageInfo_EXList.DiscardUnknown(m)
}

var xxx_messageInfo_EXList proto.InternalMessageInfo

func (m *EXList) GetList() []*EX {
	if m != nil {
		return m.List
	}
	return nil
}

type GetByQueryReq struct {
	Type                 string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Queries              []*Query           `protobuf:"bytes,2,rep,name=queries,proto3" json:"queries,omitempty"`
	Sorts                map[string]SortDir `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=def.SortDir"`
	Limit                *Limit             `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetByQueryReq) Reset()         { *m = GetByQueryReq{} }
func (m *GetByQueryReq) String() string { return proto.CompactTextString(m) }
func (*GetByQueryReq) ProtoMessage()    {}
func (*GetByQueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{23}
}

func (m *GetByQueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByQueryReq.Unmarshal(m, b)
}
func (m *GetByQueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByQueryReq.Marshal(b, m, deterministic)
}
func (m *GetByQueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByQueryReq.Merge(m, src)
}
func (m *GetByQueryReq) XXX_Size() int {
	return xxx_messageInfo_GetByQueryReq.Size(m)
}
func (m *GetByQueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByQueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetByQueryReq proto.InternalMessageInfo

func (m *GetByQueryReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetByQueryReq) GetQueries() []*Query {
	if m != nil {
		return m.Queries
	}
	return nil
}

func (m *GetByQueryReq) GetSorts() map[string]SortDir {
	if m != nil {
		return m.Sorts
	}
	return nil
}

func (m *GetByQueryReq) GetLimit() *Limit {
	if m != nil {
		return m.Limit
	}
	return nil
}

type UpdateContentReq struct {
	Type                 string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Updates              []*Update `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateContentReq) Reset()         { *m = UpdateContentReq{} }
func (m *UpdateContentReq) String() string { return proto.CompactTextString(m) }
func (*UpdateContentReq) ProtoMessage()    {}
func (*UpdateContentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{24}
}

func (m *UpdateContentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateContentReq.Unmarshal(m, b)
}
func (m *UpdateContentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateContentReq.Marshal(b, m, deterministic)
}
func (m *UpdateContentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateContentReq.Merge(m, src)
}
func (m *UpdateContentReq) XXX_Size() int {
	return xxx_messageInfo_UpdateContentReq.Size(m)
}
func (m *UpdateContentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateContentReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateContentReq proto.InternalMessageInfo

func (m *UpdateContentReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UpdateContentReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateContentReq) GetUpdates() []*Update {
	if m != nil {
		return m.Updates
	}
	return nil
}

type SetStateReq struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	State                State    `protobuf:"varint,3,opt,name=state,proto3,enum=def.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetStateReq) Reset()         { *m = SetStateReq{} }
func (m *SetStateReq) String() string { return proto.CompactTextString(m) }
func (*SetStateReq) ProtoMessage()    {}
func (*SetStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{25}
}

func (m *SetStateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetStateReq.Unmarshal(m, b)
}
func (m *SetStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetStateReq.Marshal(b, m, deterministic)
}
func (m *SetStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetStateReq.Merge(m, src)
}
func (m *SetStateReq) XXX_Size() int {
	return xxx_messageInfo_SetStateReq.Size(m)
}
func (m *SetStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetStateReq proto.InternalMessageInfo

func (m *SetStateReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SetStateReq) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *SetStateReq) GetState() State {
	if m != nil {
		return m.State
	}
	return State_StateDeleted
}

type DeleteReq struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReq) Reset()         { *m = DeleteReq{} }
func (m *DeleteReq) String() string { return proto.CompactTextString(m) }
func (*DeleteReq) ProtoMessage()    {}
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{26}
}

func (m *DeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReq.Unmarshal(m, b)
}
func (m *DeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReq.Marshal(b, m, deterministic)
}
func (m *DeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReq.Merge(m, src)
}
func (m *DeleteReq) XXX_Size() int {
	return xxx_messageInfo_DeleteReq.Size(m)
}
func (m *DeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReq proto.InternalMessageInfo

func (m *DeleteReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DeleteReq) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetCountsReq struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCountsReq) Reset()         { *m = GetCountsReq{} }
func (m *GetCountsReq) String() string { return proto.CompactTextString(m) }
func (*GetCountsReq) ProtoMessage()    {}
func (*GetCountsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{27}
}

func (m *GetCountsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCountsReq.Unmarshal(m, b)
}
func (m *GetCountsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCountsReq.Marshal(b, m, deterministic)
}
func (m *GetCountsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCountsReq.Merge(m, src)
}
func (m *GetCountsReq) XXX_Size() int {
	return xxx_messageInfo_GetCountsReq.Size(m)
}
func (m *GetCountsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCountsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetCountsReq proto.InternalMessageInfo

func (m *GetCountsReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetCountsReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterEnum("def.CountType", CountType_name, CountType_value)
	proto.RegisterEnum("def.State", State_name, State_value)
	proto.RegisterEnum("def.Op", Op_name, Op_value)
	proto.RegisterEnum("def.UpdateAction", UpdateAction_name, UpdateAction_value)
	proto.RegisterEnum("def.ValueType", ValueType_name, ValueType_value)
	proto.RegisterEnum("def.SortDir", SortDir_name, SortDir_value)
	proto.RegisterType((*RType)(nil), "def.RType")
	proto.RegisterType((*EType)(nil), "def.EType")
	proto.RegisterType((*E)(nil), "def.E")
	proto.RegisterMapType((map[string]string)(nil), "def.E.ContentEntry")
	proto.RegisterMapType((map[string]string)(nil), "def.E.MetaEntry")
	proto.RegisterType((*DefineETypeReq)(nil), "def.DefineETypeReq")
	proto.RegisterType((*CreateEWithRsReq)(nil), "def.CreateEWithRsReq")
	proto.RegisterType((*RelationReq)(nil), "def.RelationReq")
	proto.RegisterType((*GetByIDsReq)(nil), "def.GetByIDsReq")
	proto.RegisterType((*EList)(nil), "def.EList")
	proto.RegisterType((*Empty)(nil), "def.Empty")
	proto.RegisterType((*HasRelationResp)(nil), "def.HasRelationResp")
	proto.RegisterType((*Query)(nil), "def.Query")
	proto.RegisterType((*Limit)(nil), "def.Limit")
	proto.RegisterType((*Update)(nil), "def.Update")
	proto.RegisterType((*Paged)(nil), "def.Paged")
	proto.RegisterType((*PagedIDs)(nil), "def.PagedIDs")
	proto.RegisterType((*CountByState)(nil), "def.CountByState")
	proto.RegisterMapType((map[string]int64)(nil), "def.CountByState.CountsEntry")
	proto.RegisterType((*Counts)(nil), "def.Counts")
	proto.RegisterMapType((map[string]*CountByState)(nil), "def.Counts.CountsEntry")
	proto.RegisterType((*HasRelationsReq)(nil), "def.HasRelationsReq")
	proto.RegisterType((*HasRelations)(nil), "def.HasRelations")
	proto.RegisterMapType((map[string]bool)(nil), "def.HasRelations.RelationsEntry")
	proto.RegisterType((*GetRelationReq)(nil), "def.GetRelationReq")
	proto.RegisterType((*EX)(nil), "def.EX")
	proto.RegisterMapType((map[string]*EXPaged)(nil), "def.EX.ChildrenEntry")
	proto.RegisterType((*EXPaged)(nil), "def.EXPaged")
	proto.RegisterType((*EXList)(nil), "def.EXList")
	proto.RegisterType((*GetByQueryReq)(nil), "def.GetByQueryReq")
	proto.RegisterMapType((map[string]SortDir)(nil), "def.GetByQueryReq.SortsEntry")
	proto.RegisterType((*UpdateContentReq)(nil), "def.UpdateContentReq")
	proto.RegisterType((*SetStateReq)(nil), "def.SetStateReq")
	proto.RegisterType((*DeleteReq)(nil), "def.DeleteReq")
	proto.RegisterType((*GetCountsReq)(nil), "def.GetCountsReq")
}

func init() { proto.RegisterFile("def.proto", fileDescriptor_76fb0470a3b910d8) }

var fileDescriptor_76fb0470a3b910d8 = []byte{
	// 1695 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x73, 0xdb, 0x40,
	0x15, 0x8f, 0x24, 0x4b, 0xb6, 0x9e, 0x13, 0x57, 0x5d, 0xfa, 0xa1, 0x9a, 0x52, 0x8c, 0x9a, 0x4e,
	0x4d, 0x68, 0x1c, 0xec, 0xf4, 0x83, 0x96, 0x0e, 0x33, 0x4d, 0xec, 0xa4, 0x86, 0xf4, 0x03, 0x25,
	0x85, 0x32, 0x50, 0x66, 0x14, 0x6b, 0xe3, 0x08, 0x6c, 0xc9, 0x91, 0xd6, 0x99, 0x1a, 0x86, 0x19,
	0x2e, 0x0c, 0x3d, 0x70, 0xe2, 0xc4, 0xdf, 0xc2, 0x89, 0x1b, 0xff, 0x05, 0xf7, 0xfe, 0x01, 0xdc,
	0x99, 0x7d, 0xbb, 0x92, 0xa5, 0xa4, 0x90, 0x34, 0x2d, 0x17, 0x6b, 0xf7, 0x7d, 0xec, 0x7b, 0xfb,
	0xde, 0xbe, 0xdf, 0xdb, 0x35, 0x98, 0x3e, 0x3d, 0x68, 0x4d, 0xe2, 0x88, 0x45, 0x44, 0xf3, 0xe9,
	0x41, 0xfd, 0xd9, 0x30, 0x60, 0x87, 0xd3, 0xfd, 0xd6, 0x20, 0x1a, 0xaf, 0xd1, 0xf0, 0x38, 0x9a,
	0x4d, 0xe2, 0xe8, 0xfd, 0x6c, 0x0d, 0x25, 0x06, 0xab, 0x43, 0x1a, 0xae, 0x1e, 0x7b, 0xa3, 0xc0,
	0xf7, 0x18, 0x5d, 0x3b, 0x35, 0x10, 0xeb, 0x38, 0x1f, 0x15, 0xd0, 0xdd, 0xbd, 0xd9, 0x84, 0x92,
	0x0e, 0x94, 0x0e, 0xe2, 0x68, 0x6c, 0x2b, 0x0d, 0xa5, 0x69, 0x6e, 0xdc, 0xfa, 0xfb, 0xc7, 0x7f,
	0x68, 0x37, 0xe2, 0xeb, 0x9d, 0xab, 0xbf, 0xfe, 0xa5, 0xb7, 0xfa, 0xbb, 0x77, 0xfc, 0xe7, 0xfb,
	0xab, 0x8f, 0xdf, 0xfd, 0xbe, 0x7d, 0xaf, 0x7d, 0xff, 0x0f, 0xcb, 0x2e, 0xca, 0x92, 0x16, 0xa8,
	0x2c, 0xb2, 0xd5, 0x73, 0x69, 0xa8, 0x2c, 0xe2, 0x36, 0x8e, 0x69, 0xbc, 0x6f, 0x6b, 0xe7, 0xb3,
	0xc1, 0x65, 0x49, 0x1d, 0x2a, 0xe3, 0xe9, 0x88, 0x05, 0x93, 0x11, 0xb5, 0x4b, 0x0d, 0xa5, 0x59,
	0x71, 0xb3, 0x39, 0xb9, 0x07, 0xe6, 0x20, 0x9a, 0x86, 0x8c, 0x6f, 0xc0, 0xd6, 0x1b, 0x4a, 0xb3,
	0xd6, 0xa9, 0xb5, 0x78, 0x90, 0x36, 0x53, 0xaa, 0x3b, 0x17, 0x70, 0x7e, 0x08, 0x7a, 0x2f, 0xdd,
	0x6a, 0xe8, 0x8d, 0xe9, 0x79, 0xb7, 0xca, 0x65, 0x9d, 0x7f, 0x6b, 0xa0, 0xf4, 0xb8, 0x26, 0xda,
	0x3a, 0xa7, 0x26, 0x5a, 0xab, 0x81, 0xda, 0xef, 0x8a, 0x20, 0xb9, 0x6a, 0xbf, 0x4b, 0x2c, 0xd0,
	0xfa, 0xdd, 0xb6, 0x88, 0x81, 0xcb, 0x87, 0x82, 0xd2, 0xc1, 0xdd, 0x21, 0xa5, 0x23, 0x28, 0xeb,
	0xb8, 0x25, 0xa4, 0xac, 0x93, 0x2b, 0xa0, 0x6f, 0xee, 0x05, 0x63, 0x6a, 0x1b, 0x0d, 0xa5, 0xa9,
	0xb9, 0x62, 0xc2, 0xa9, 0x6f, 0x90, 0x5a, 0x16, 0x54, 0x9c, 0x90, 0x06, 0xe8, 0xbb, 0xcc, 0x63,
	0xd4, 0xae, 0x60, 0x48, 0x00, 0x43, 0x82, 0x14, 0x57, 0x30, 0x08, 0x81, 0xd2, 0x9e, 0x37, 0x4c,
	0x6c, 0xb3, 0xa1, 0x35, 0x4d, 0x17, 0xc7, 0x64, 0x19, 0x4a, 0x2f, 0x28, 0xf3, 0x6c, 0x68, 0x68,
	0xcd, 0x6a, 0xc7, 0x42, 0xa5, 0x5e, 0x8b, 0x93, 0x7a, 0x21, 0x8b, 0x67, 0x2e, 0x72, 0xc9, 0x2a,
	0x94, 0x37, 0xa3, 0x90, 0xd1, 0x90, 0xd9, 0x55, 0x14, 0xfc, 0x86, 0x14, 0x94, 0x54, 0x21, 0x9b,
	0xca, 0x70, 0x07, 0x77, 0x07, 0x51, 0x4c, 0xed, 0x45, 0xe1, 0x20, 0x4e, 0xc8, 0x35, 0x30, 0x70,
	0xd0, 0xb6, 0x97, 0x90, 0x2c, 0x67, 0xe4, 0x26, 0x98, 0x2e, 0x4d, 0xa2, 0x69, 0x3c, 0xa0, 0x89,
	0x5d, 0x43, 0xdf, 0xe6, 0x84, 0xfa, 0x23, 0x30, 0x33, 0x6f, 0x78, 0x84, 0x7e, 0x4b, 0x67, 0x22,
	0x11, 0x2e, 0x1f, 0x72, 0x53, 0xc7, 0xde, 0x68, 0x4a, 0x65, 0xa8, 0xc5, 0xe4, 0x89, 0xfa, 0x03,
	0xa5, 0xfe, 0x04, 0x16, 0xf3, 0xde, 0x7d, 0x8e, 0xae, 0x73, 0x00, 0xb5, 0x2e, 0x3d, 0x08, 0x42,
	0x8a, 0x47, 0xc7, 0xa5, 0x47, 0x3c, 0xba, 0x34, 0x3b, 0x04, 0x55, 0x19, 0x5d, 0xc1, 0x15, 0x0c,
	0xd2, 0x81, 0xda, 0x20, 0xa6, 0x1e, 0x0b, 0xa2, 0x10, 0x6b, 0x2b, 0xb1, 0x55, 0x0c, 0x95, 0x10,
	0x45, 0x92, 0x7b, 0x42, 0xc2, 0xf9, 0x31, 0x58, 0x9b, 0x9c, 0x42, 0x7b, 0x3f, 0x0f, 0xd8, 0xa1,
	0x9b, 0x70, 0x4b, 0x57, 0x40, 0x49, 0xad, 0x18, 0xc2, 0x8a, 0xab, 0xf0, 0xec, 0x96, 0x63, 0x3a,
	0xf2, 0x18, 0xf5, 0xe5, 0xb2, 0x29, 0x2f, 0x25, 0x3b, 0x53, 0xa8, 0xba, 0x7c, 0xc8, 0x57, 0xa7,
	0x47, 0xa4, 0x9e, 0xab, 0xec, 0xb9, 0xb4, 0xa8, 0xe0, 0x6b, 0x59, 0x05, 0xcf, 0x39, 0x17, 0xac,
	0x54, 0x67, 0x17, 0xaa, 0xdb, 0x94, 0x6d, 0xcc, 0xfa, 0x5d, 0xf4, 0xbe, 0x03, 0x25, 0xf6, 0x19,
	0xb5, 0xc2, 0x65, 0x79, 0x66, 0x02, 0x5f, 0x84, 0xcb, 0x74, 0xf9, 0xd0, 0xb9, 0x0d, 0x7a, 0x6f,
	0x27, 0x48, 0x18, 0xdf, 0xc5, 0x28, 0x48, 0x98, 0xad, 0x14, 0xf6, 0x8c, 0x34, 0xa7, 0x0c, 0x7a,
	0x6f, 0x3c, 0x61, 0x33, 0xe7, 0x36, 0x5c, 0x7a, 0xee, 0x25, 0xf3, 0xcd, 0x27, 0x13, 0xbe, 0xe4,
	0xa1, 0x97, 0xa0, 0x17, 0x15, 0x97, 0x0f, 0x9d, 0x3f, 0x29, 0xa0, 0xff, 0x74, 0x4a, 0xe3, 0x19,
	0xf9, 0x36, 0xe8, 0x5b, 0x01, 0x1d, 0xf9, 0xd2, 0x47, 0x93, 0xfb, 0x58, 0x8a, 0x55, 0x4b, 0x71,
	0x05, 0x9d, 0x5c, 0x07, 0xf5, 0xd5, 0x04, 0xc3, 0x53, 0xeb, 0x94, 0xd1, 0xe4, 0xab, 0x89, 0xab,
	0xbe, 0x9a, 0xf0, 0x03, 0xf3, 0x33, 0x3c, 0x30, 0xa2, 0x8c, 0xc5, 0x84, 0xe3, 0x11, 0x0e, 0xf0,
	0x78, 0x94, 0x72, 0x78, 0x94, 0x51, 0xdd, 0xb9, 0x80, 0xd3, 0x06, 0x7d, 0x27, 0x18, 0x07, 0x8c,
	0x57, 0xe3, 0x56, 0x06, 0xbd, 0x2e, 0x8e, 0xb9, 0x01, 0x64, 0xa2, 0x71, 0xdd, 0x15, 0x13, 0xe7,
	0x6f, 0x0a, 0x18, 0x6f, 0x26, 0x1c, 0xbf, 0xcf, 0xf6, 0xfd, 0xbb, 0x60, 0x3c, 0x1b, 0xf0, 0x30,
	0x48, 0xff, 0x2f, 0xa3, 0x27, 0x42, 0x5b, 0x30, 0x5c, 0x29, 0xf0, 0x55, 0x76, 0xf3, 0x0b, 0xd0,
	0x5f, 0x7b, 0x43, 0xea, 0xf3, 0x44, 0xed, 0x7c, 0x22, 0x51, 0x98, 0x44, 0x1b, 0xca, 0xcf, 0xbd,
	0xe4, 0x05, 0x07, 0x04, 0x15, 0x13, 0x92, 0x4e, 0x39, 0xcc, 0xbf, 0xa4, 0xef, 0x19, 0xc6, 0x41,
	0x78, 0x91, 0xcd, 0x9d, 0x3d, 0xa8, 0xe0, 0xd2, 0xfd, 0x6e, 0xc2, 0x63, 0x95, 0xad, 0x6e, 0x7e,
	0xd1, 0xaa, 0x7f, 0x54, 0x38, 0x2c, 0x4c, 0x43, 0xb6, 0x31, 0x13, 0xa0, 0xf8, 0x00, 0x0c, 0x6c,
	0x16, 0x89, 0x74, 0xfd, 0x5b, 0xf3, 0x56, 0x22, 0x45, 0xc4, 0x24, 0x11, 0x18, 0x27, 0x85, 0xeb,
	0x8f, 0xa1, 0x9a, 0x23, 0x9f, 0x05, 0x2e, 0x5a, 0x1e, 0x5c, 0xfe, 0xac, 0x80, 0x21, 0x74, 0xc9,
	0xda, 0x09, 0xe3, 0xd7, 0xe7, 0xc6, 0x93, 0x4f, 0x9a, 0xdd, 0x39, 0xcb, 0xec, 0xdd, 0xbc, 0xd9,
	0xaa, 0x4c, 0x7f, 0x7e, 0x37, 0x79, 0x4f, 0x06, 0x85, 0xc2, 0x49, 0x2e, 0x0a, 0x1b, 0x37, 0xc1,
	0x8c, 0xd3, 0x35, 0x6c, 0x4d, 0x00, 0x78, 0x46, 0x70, 0xfe, 0xa2, 0xc0, 0x62, 0xde, 0x0a, 0xf9,
	0x51, 0x5e, 0x5c, 0xec, 0xbb, 0x81, 0xab, 0xe5, 0xa5, 0x5a, 0xd9, 0x48, 0x04, 0x60, 0xae, 0x52,
	0x7f, 0x0a, 0xb5, 0x22, 0xf3, 0xac, 0xe8, 0x57, 0xf2, 0x7b, 0xfe, 0x0d, 0xd4, 0xb6, 0x29, 0x3b,
	0x2f, 0x52, 0xd6, 0xa1, 0x92, 0x1a, 0x96, 0x5d, 0x22, 0x9b, 0xf3, 0x96, 0x30, 0xc2, 0x62, 0xd5,
	0x72, 0x2d, 0x01, 0x2b, 0xd6, 0x15, 0x0c, 0xe7, 0x9f, 0x2a, 0xa8, 0xbd, 0xb7, 0xe4, 0x16, 0x18,
	0x34, 0x64, 0x01, 0x9b, 0x9d, 0x30, 0x21, 0xa9, 0xe4, 0x3b, 0x27, 0xb1, 0x5d, 0x80, 0x4e, 0xef,
	0x6d, 0x06, 0xee, 0x64, 0x99, 0xc7, 0x2c, 0xed, 0x91, 0x5a, 0xa1, 0xc6, 0xe6, 0x0c, 0x72, 0x3b,
	0x3b, 0x4e, 0x25, 0x34, 0x54, 0xcd, 0x1d, 0xa7, 0xf4, 0x08, 0x91, 0x07, 0xb0, 0x78, 0x98, 0x0b,
	0x34, 0x5e, 0x37, 0xd2, 0x83, 0x52, 0x38, 0x0d, 0x05, 0x31, 0xd2, 0x86, 0xca, 0xe0, 0x30, 0x18,
	0xf9, 0x31, 0x0d, 0x6d, 0x03, 0x1d, 0xb8, 0x2a, 0xbd, 0x6c, 0x6d, 0x4a, 0xba, 0xc8, 0x54, 0x26,
	0x56, 0xef, 0xc3, 0x52, 0x81, 0xf5, 0x89, 0x3c, 0x39, 0xc5, 0xe3, 0xba, 0x28, 0x97, 0xc4, 0xc2,
	0xcf, 0x67, 0xed, 0x57, 0x50, 0x96, 0x54, 0xf2, 0xcd, 0x02, 0xd2, 0x64, 0xa1, 0xfa, 0x12, 0x50,
	0xb8, 0x03, 0x46, 0xef, 0x2d, 0xea, 0xff, 0xaf, 0xc5, 0x9d, 0x0f, 0x2a, 0x2c, 0x61, 0xaf, 0xc3,
	0x3e, 0x72, 0xd1, 0x6e, 0xb7, 0x0c, 0xe5, 0xa3, 0x29, 0x8d, 0x83, 0x13, 0x17, 0x04, 0xb1, 0x66,
	0xca, 0x22, 0xeb, 0xa0, 0x27, 0x51, 0xcc, 0xd2, 0x64, 0x0b, 0x54, 0x2a, 0x18, 0x6f, 0xed, 0x72,
	0xbe, 0x88, 0xb9, 0x90, 0x9d, 0x9f, 0xc8, 0xd2, 0x7f, 0x39, 0x91, 0xf5, 0x2d, 0x80, 0xb9, 0xda,
	0x59, 0xf9, 0xa8, 0xc9, 0x7c, 0x70, 0x8d, 0x6e, 0x10, 0xe7, 0xf3, 0xf1, 0x41, 0x01, 0x4b, 0x34,
	0x15, 0x79, 0xc7, 0xba, 0x68, 0x34, 0x6e, 0x80, 0x1a, 0xf8, 0xf2, 0x31, 0x91, 0xeb, 0x66, 0x6a,
	0xe0, 0x93, 0x3b, 0x50, 0x9e, 0xa2, 0x89, 0x34, 0x08, 0xd5, 0x5c, 0x2f, 0x73, 0x53, 0x1e, 0x6f,
	0xec, 0xd5, 0x5d, 0xca, 0x04, 0xb8, 0x5d, 0xd0, 0x8b, 0x46, 0xee, 0x06, 0xb2, 0x51, 0xe3, 0x2a,
	0xe6, 0x5f, 0x15, 0xc3, 0x11, 0xbe, 0x70, 0x16, 0x0f, 0x6d, 0x82, 0xb7, 0x6b, 0xed, 0xf4, 0xed,
	0x1a, 0x19, 0x8e, 0x07, 0x66, 0x97, 0x8e, 0xe8, 0xff, 0xd1, 0x09, 0xe7, 0x1d, 0x2c, 0x6e, 0x53,
	0x26, 0xeb, 0xf9, 0xab, 0x07, 0x7c, 0xe5, 0x27, 0x60, 0x66, 0x4f, 0x28, 0xb2, 0x24, 0x27, 0x1b,
	0x11, 0x3b, 0xb4, 0x16, 0x88, 0x25, 0xdb, 0x26, 0xaf, 0x97, 0x5e, 0xe8, 0x5b, 0x0a, 0xa9, 0x01,
	0x08, 0xe9, 0x88, 0xcf, 0xd5, 0x4c, 0xe1, 0x65, 0x14, 0x52, 0x4b, 0x5b, 0x39, 0x92, 0xcf, 0x11,
	0xae, 0x89, 0x03, 0x11, 0x1c, 0x5f, 0xac, 0x85, 0x94, 0xd7, 0x71, 0x70, 0xec, 0x31, 0x6a, 0x29,
	0x04, 0xc0, 0x40, 0x4a, 0xdb, 0x52, 0xb3, 0x71, 0xc7, 0xd2, 0xb2, 0xf1, 0xba, 0x55, 0x22, 0x97,
	0xa0, 0x8a, 0xe3, 0xad, 0x38, 0xa0, 0xa1, 0x6f, 0xe9, 0x19, 0xe1, 0xf5, 0x74, 0x7f, 0x14, 0x0c,
	0x2c, 0x63, 0xe5, 0x29, 0xbf, 0xb7, 0x11, 0x03, 0xd4, 0xde, 0x91, 0xb5, 0xc0, 0xbf, 0xdb, 0xcc,
	0x52, 0xf0, 0x4b, 0x2d, 0x95, 0x7f, 0x77, 0x98, 0xa5, 0xe1, 0x97, 0x5a, 0x25, 0xfe, 0x7d, 0x49,
	0x2d, 0x9d, 0x7f, 0xfb, 0xa1, 0x65, 0xac, 0x3c, 0x84, 0xc5, 0xfc, 0x35, 0x89, 0x94, 0x41, 0xdb,
	0xa5, 0xcc, 0x5a, 0x20, 0x15, 0x28, 0xf5, 0xc3, 0x41, 0x6c, 0x29, 0x9c, 0xf4, 0xcc, 0xf7, 0x85,
	0x8f, 0x2e, 0x1d, 0x47, 0xc7, 0x7c, 0xa3, 0x3b, 0xb9, 0x0b, 0x93, 0x70, 0x38, 0x0e, 0xc2, 0xa1,
	0xb5, 0x40, 0x4c, 0xd0, 0xfb, 0x21, 0x7b, 0x78, 0x5f, 0x28, 0xf6, 0x43, 0x26, 0x14, 0xbb, 0xd1,
	0x74, 0x7f, 0x44, 0x2d, 0x8d, 0xaf, 0xbb, 0x11, 0x45, 0x23, 0xab, 0xc4, 0x25, 0x37, 0x66, 0x8c,
	0x26, 0x96, 0xbe, 0x72, 0x13, 0xca, 0xb2, 0xdc, 0xd0, 0x5a, 0x32, 0x10, 0x0e, 0x74, 0x69, 0x32,
	0xb0, 0x94, 0xce, 0xbf, 0x4a, 0x50, 0xde, 0x65, 0x51, 0xec, 0x0d, 0x29, 0x69, 0x41, 0xd5, 0x9f,
	0xbf, 0x51, 0x88, 0x78, 0x91, 0x15, 0x5f, 0x2d, 0x75, 0xf9, 0x4c, 0xe1, 0xb7, 0x64, 0x72, 0x27,
	0x95, 0x17, 0x2f, 0xff, 0xdc, 0xb3, 0xa4, 0x20, 0x76, 0x17, 0x0c, 0x7c, 0xa4, 0x50, 0x22, 0xf0,
	0xfd, 0xe4, 0xfb, 0xa4, 0x2e, 0xfb, 0x0e, 0x69, 0xc9, 0xf7, 0x0e, 0x4d, 0x7b, 0x04, 0x11, 0xaf,
	0xc7, 0x5c, 0x6b, 0x2d, 0x2c, 0xdc, 0x82, 0x5a, 0x8c, 0x31, 0x3b, 0xa7, 0xfc, 0xa3, 0x62, 0x9f,
	0x22, 0x57, 0x4e, 0x77, 0x28, 0x7a, 0x54, 0x3f, 0xdd, 0xb7, 0x48, 0x1b, 0xaa, 0xc3, 0x79, 0x87,
	0x97, 0x81, 0x29, 0xf6, 0xfc, 0xfa, 0x12, 0x12, 0xb3, 0xfb, 0x65, 0x13, 0x2a, 0x43, 0x7c, 0xc4,
	0xf8, 0x89, 0xf4, 0x2a, 0xf7, 0xa6, 0x49, 0xbd, 0xc2, 0x06, 0x71, 0x0f, 0x60, 0x98, 0xa1, 0x30,
	0x21, 0xa7, 0x61, 0x59, 0x4a, 0x8b, 0x5e, 0xd5, 0x81, 0xa5, 0x69, 0x1e, 0x25, 0x65, 0x4c, 0x4f,
	0x22, 0x67, 0x61, 0xdf, 0x4d, 0xa8, 0x24, 0x12, 0xce, 0xa4, 0x2f, 0x39, 0x74, 0x2b, 0x48, 0x2e,
	0x83, 0xe1, 0x63, 0x51, 0x91, 0x9a, 0x4c, 0xbe, 0x84, 0x9f, 0x82, 0xd4, 0xf7, 0xc0, 0x1c, 0xa6,
	0xa0, 0x41, 0x2e, 0xa7, 0x0e, 0x67, 0x20, 0x52, 0xcf, 0x5f, 0x12, 0xf6, 0x0d, 0xfc, 0x83, 0x68,
	0xfd, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x3f, 0x22, 0xac, 0x75, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	DefineEType(ctx context.Context, in *DefineETypeReq, opts ...grpc.CallOption) (*Empty, error)
	DefineRType(ctx context.Context, in *RType, opts ...grpc.CallOption) (*Empty, error)
	Create(ctx context.Context, in *CreateEWithRsReq, opts ...grpc.CallOption) (*E, error)
	CreateRelation(ctx context.Context, in *RelationReq, opts ...grpc.CallOption) (*Empty, error)
	RemoveRelation(ctx context.Context, in *RelationReq, opts ...grpc.CallOption) (*Empty, error)
	HasRelations(ctx context.Context, in *HasRelationsReq, opts ...grpc.CallOption) (*HasRelations, error)
	GetRelation(ctx context.Context, in *GetRelationReq, opts ...grpc.CallOption) (*PagedIDs, error)
	GetByIds(ctx context.Context, in *GetByIDsReq, opts ...grpc.CallOption) (*EList, error)
	GetByQuery(ctx context.Context, in *GetByQueryReq, opts ...grpc.CallOption) (*Paged, error)
	UpdateContent(ctx context.Context, in *UpdateContentReq, opts ...grpc.CallOption) (*Empty, error)
	SetState(ctx context.Context, in *SetStateReq, opts ...grpc.CallOption) (*Empty, error)
	Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error)
	GetCounts(ctx context.Context, in *GetCountsReq, opts ...grpc.CallOption) (*Counts, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) DefineEType(ctx context.Context, in *DefineETypeReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/defineEType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) DefineRType(ctx context.Context, in *RType, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/defineRType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Create(ctx context.Context, in *CreateEWithRsReq, opts ...grpc.CallOption) (*E, error) {
	out := new(E)
	err := c.cc.Invoke(ctx, "/def.Storage/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) CreateRelation(ctx context.Context, in *RelationReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/createRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) RemoveRelation(ctx context.Context, in *RelationReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/removeRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) HasRelations(ctx context.Context, in *HasRelationsReq, opts ...grpc.CallOption) (*HasRelations, error) {
	out := new(HasRelations)
	err := c.cc.Invoke(ctx, "/def.Storage/hasRelations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetRelation(ctx context.Context, in *GetRelationReq, opts ...grpc.CallOption) (*PagedIDs, error) {
	out := new(PagedIDs)
	err := c.cc.Invoke(ctx, "/def.Storage/getRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetByIds(ctx context.Context, in *GetByIDsReq, opts ...grpc.CallOption) (*EList, error) {
	out := new(EList)
	err := c.cc.Invoke(ctx, "/def.Storage/getByIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetByQuery(ctx context.Context, in *GetByQueryReq, opts ...grpc.CallOption) (*Paged, error) {
	out := new(Paged)
	err := c.cc.Invoke(ctx, "/def.Storage/getByQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) UpdateContent(ctx context.Context, in *UpdateContentReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/updateContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) SetState(ctx context.Context, in *SetStateReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/setState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/def.Storage/delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) GetCounts(ctx context.Context, in *GetCountsReq, opts ...grpc.CallOption) (*Counts, error) {
	out := new(Counts)
	err := c.cc.Invoke(ctx, "/def.Storage/getCounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	DefineEType(context.Context, *DefineETypeReq) (*Empty, error)
	DefineRType(context.Context, *RType) (*Empty, error)
	Create(context.Context, *CreateEWithRsReq) (*E, error)
	CreateRelation(context.Context, *RelationReq) (*Empty, error)
	RemoveRelation(context.Context, *RelationReq) (*Empty, error)
	HasRelations(context.Context, *HasRelationsReq) (*HasRelations, error)
	GetRelation(context.Context, *GetRelationReq) (*PagedIDs, error)
	GetByIds(context.Context, *GetByIDsReq) (*EList, error)
	GetByQuery(context.Context, *GetByQueryReq) (*Paged, error)
	UpdateContent(context.Context, *UpdateContentReq) (*Empty, error)
	SetState(context.Context, *SetStateReq) (*Empty, error)
	Delete(context.Context, *DeleteReq) (*Empty, error)
	GetCounts(context.Context, *GetCountsReq) (*Counts, error)
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) DefineEType(ctx context.Context, req *DefineETypeReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefineEType not implemented")
}
func (*UnimplementedStorageServer) DefineRType(ctx context.Context, req *RType) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefineRType not implemented")
}
func (*UnimplementedStorageServer) Create(ctx context.Context, req *CreateEWithRsReq) (*E, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedStorageServer) CreateRelation(ctx context.Context, req *RelationReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelation not implemented")
}
func (*UnimplementedStorageServer) RemoveRelation(ctx context.Context, req *RelationReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRelation not implemented")
}
func (*UnimplementedStorageServer) HasRelations(ctx context.Context, req *HasRelationsReq) (*HasRelations, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HasRelations not implemented")
}
func (*UnimplementedStorageServer) GetRelation(ctx context.Context, req *GetRelationReq) (*PagedIDs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelation not implemented")
}
func (*UnimplementedStorageServer) GetByIds(ctx context.Context, req *GetByIDsReq) (*EList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByIds not implemented")
}
func (*UnimplementedStorageServer) GetByQuery(ctx context.Context, req *GetByQueryReq) (*Paged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByQuery not implemented")
}
func (*UnimplementedStorageServer) UpdateContent(ctx context.Context, req *UpdateContentReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContent not implemented")
}
func (*UnimplementedStorageServer) SetState(ctx context.Context, req *SetStateReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetState not implemented")
}
func (*UnimplementedStorageServer) Delete(ctx context.Context, req *DeleteReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedStorageServer) GetCounts(ctx context.Context, req *GetCountsReq) (*Counts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCounts not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_DefineEType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefineETypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).DefineEType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/DefineEType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).DefineEType(ctx, req.(*DefineETypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_DefineRType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).DefineRType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/DefineRType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).DefineRType(ctx, req.(*RType))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEWithRsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Create(ctx, req.(*CreateEWithRsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_CreateRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).CreateRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/CreateRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).CreateRelation(ctx, req.(*RelationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_RemoveRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).RemoveRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/RemoveRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).RemoveRelation(ctx, req.(*RelationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_HasRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasRelationsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).HasRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/HasRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).HasRelations(ctx, req.(*HasRelationsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).GetRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/GetRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).GetRelation(ctx, req.(*GetRelationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetByIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).GetByIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/GetByIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).GetByIds(ctx, req.(*GetByIDsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetByQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).GetByQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/GetByQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).GetByQuery(ctx, req.(*GetByQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_UpdateContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).UpdateContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/UpdateContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).UpdateContent(ctx, req.(*UpdateContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_SetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).SetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/SetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).SetState(ctx, req.(*SetStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Delete(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_GetCounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCountsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).GetCounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/def.Storage/GetCounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).GetCounts(ctx, req.(*GetCountsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "def.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "defineEType",
			Handler:    _Storage_DefineEType_Handler,
		},
		{
			MethodName: "defineRType",
			Handler:    _Storage_DefineRType_Handler,
		},
		{
			MethodName: "create",
			Handler:    _Storage_Create_Handler,
		},
		{
			MethodName: "createRelation",
			Handler:    _Storage_CreateRelation_Handler,
		},
		{
			MethodName: "removeRelation",
			Handler:    _Storage_RemoveRelation_Handler,
		},
		{
			MethodName: "hasRelations",
			Handler:    _Storage_HasRelations_Handler,
		},
		{
			MethodName: "getRelation",
			Handler:    _Storage_GetRelation_Handler,
		},
		{
			MethodName: "getByIds",
			Handler:    _Storage_GetByIds_Handler,
		},
		{
			MethodName: "getByQuery",
			Handler:    _Storage_GetByQuery_Handler,
		},
		{
			MethodName: "updateContent",
			Handler:    _Storage_UpdateContent_Handler,
		},
		{
			MethodName: "setState",
			Handler:    _Storage_SetState_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _Storage_Delete_Handler,
		},
		{
			MethodName: "getCounts",
			Handler:    _Storage_GetCounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "def.proto",
}
